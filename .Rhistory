if(!require("pacman")){
install.packages('devtools')
require(remotes)
install_version("pacman", version = "0.4.6", repos = "http://cran.us.r-project.org")
}
pacman::p_load(ggplot2, data.table, maptools, mapproj, RColorBrewer,tidyverse,
rgeos, scales, stringr, rmarkdown, gdata, zoo, viridis,png,grid)
inputs = read.csv('Marmot_user_defined_inputs.csv', header = T)
inputs = read.csv('Marmot_user_defined_inputs.csv', header = T)
parent_dir = inputs[2,4]
scenario_dir = inputs[6,4]
agg_by_prefix = inputs[9,4]
plots_dir = paste0(parent_dir,'/',scenario_dir,'/Figures_Output/',agg_by_prefix,'_')
regions = read.csv('mapping_folder/Region_mapping.csv')
regions = unique(select(regions,as.character(agg_by_prefix)))[,1]
regions
setwd("C:\Users\mschwarz\Desktop\Marmot")
setwd("C:")
setwd("\\Users\mschwarz\Desktop\Marmot")
setwd("\Users\mschwarz\Desktop\Marmot")
setwd("\users\mschwarz\Desktop\Marmot")
setwd("/Users\mschwarz\Desktop\Marmot")
setwd("/Users/mschwarz\Desktop\Marmot")
setwd("/Users/mschwarz/Desktop/Marmot")
inputs = data.table(read.csv('Marmot_user_defined_inputs.csv', header = T))
inputs
inputs[Input == 'Processed_Solutions_folder']
inputs[Input == 'Processed_Solutions_folder']$User_defined_value
parent_dir = as.character(inputs[Input == 'Processed_Solutions_folder']$User_defined_value)
parent_dir
scenario_dir = as.character(inputs[Input == 'Main_scenario_plot']$User_defined_value)
scenario_dir
agg_by_prefix = as.character(inputs[Input == 'AGG_BY']$User_defined_value)
agg_by_prefix
plots_dir = paste0(parent_dir,'/',scenario_dir,'/Figures_Output/',agg_by_prefix,'_')
plots_dir
regions = data.table(read.csv('mapping_folder/Region_mapping.csv'))
regions = unique(select(regions,as.character(agg_by_prefix)))[,1]
regions
regions[agg_by_previx]
regions[agg_by_prefix]
regions[,.(agg_by_prefix)]
regions,.(Interconnection)
regions[],.(Interconnection)]
regions[,.(Interconnection)]
agg_by_prefix
install.packages('dplyr')
library(dplyr)
library(Rcpp)
install.packages('Rcpp')
install.packages("Rcpp")
library(Rcpp)
library(dplry)
library(dplr)
library(dplyr)
regions = unique(select(regions,as.character(agg_by_prefix)))[,1]
regions
regions_n = length(regions)
region_n
regions_n
region = regions[1]
region
plot = paste0(plots_subdir,region,'_Avg_Out_Committed.png')
plots_subdir = paste0(plots_dir,'Capacity_Factor/')
region = regions[1]
plot = paste0(plots_subdir,region,'_Avg_Out_Committed.png')
plot
regions
as.character(regions)
regions = as.character(unique(select(regions,as.character(agg_by_prefix)))[,1])
